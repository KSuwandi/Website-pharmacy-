package pojo;
// Generated Oct 7, 2019 8:31:55 PM by Hibernate Tools 4.3.1

import javax.faces.bean.ManagedBean;
import model.DAOUser;
import java.util.List;
import model.DAOLogin;



/**
 * User generated by hbm2java
 */
@ManagedBean
public class User  implements java.io.Serializable {


     private Integer iduser;
     private String usernameu;
     private String emailuse;
     private String passuser;

    public User() {
    }

    public User(String usernameu, String emailuse, String passuser) {
       this.usernameu = usernameu;
       this.emailuse = emailuse;
       this.passuser = passuser;
    }
   
    public Integer getIduser() {
        return this.iduser;
    }
    
    public void setIduser(Integer iduser) {
        this.iduser = iduser;
    }
    public String getUsernameu() {
        return this.usernameu;
    }
    
    public void setUsernameu(String usernameu) {
        this.usernameu = usernameu;
    }
    public String getEmailuse() {
        return this.emailuse;
    }
    
    public void setEmailuse(String emailuse) {
        this.emailuse = emailuse;
    }
    public String getPassuser() {
        return this.passuser;
    }
    
    public void setPassuser(String passuser) {
        this.passuser = passuser;
    }

    public void update(){
        DAOUser usri = new DAOUser();
        //string id = iduse.tostring();
        List<User> lusr = usri.getUsers(iduser);
        if (!lusr.isEmpty()){
            
            usri.updateUser(this);
        }
    }
    
    public String save(){
        DAOUser us = new DAOUser();
        us.addUser(this);
        return "index.xhtml";
    }


     public String delete(){
        DAOUser usre = new DAOUser();
        //string id = idUser
        List<User> lusr = usre.getUsers(iduser);
        if(!lusr.isEmpty()){
            usre.deleteUser(iduser);
        }
        return "restock";
    }


     public String validasiuser(){
    DAOLogin uDao = new DAOLogin();
    List<User> us = uDao.getBy(usernameu, passuser);
    if(us != null){
        iduser = us.get(0).iduser;
        usernameu = us.get(0).usernameu;
        passuser = us.get(0).passuser;
        return "index";
    }
    return "error";
}

      public List<User> getRec(){
        DAOUser usr = new DAOUser();
        List<User> lusr = usr.retrieveUser();
        return lusr;
   }

      public String getbyID(){
        DAOUser usr = new DAOUser();
        if(iduser != null ){
        List<User> lstk = usr.getId(iduser);
        if(!lstk.isEmpty()){
            iduser = lstk.get(0).iduser;
            usernameu = lstk.get(0).usernameu;
            emailuse = lstk.get(0).emailuse;
            passuser = lstk.get(0).passuser;
            
        }}
       return "index";
    }

      
      public String name(){
          if(iduser!=null){
              return usernameu;
          }else{
              return "";
          }
      }
}


